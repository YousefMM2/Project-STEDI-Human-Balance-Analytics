import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
from awsglue.dynamicframe import DynamicFrame
from pyspark.sql import functions as SqlFuncs

args = getResolvedOptions(sys.argv, ['JOB_NAME'])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

# Script generated for node customer trusted
customertrusted_node1742663534428 = glueContext.create_dynamic_frame.from_catalog(database="yousef-project", table_name="customer_trusted", transformation_ctx="customertrusted_node1742663534428")

# Script generated for node accelerometer trusted
accelerometertrusted_node1742583743103 = glueContext.create_dynamic_frame.from_catalog(database="yousef-project", table_name="accelerometer_trusted", transformation_ctx="accelerometertrusted_node1742583743103")

# Script generated for node Join
Join_node1742583764315 = Join.apply(frame1=accelerometertrusted_node1742583743103, frame2=customertrusted_node1742663534428, keys1=["user"], keys2=["email"], transformation_ctx="Join_node1742583764315")

# Script generated for node Drop Duplicates
DropDuplicates_node1742698852600 =  DynamicFrame.fromDF(Join_node1742583764315.toDF().dropDuplicates(["customername"]), glueContext, "DropDuplicates_node1742698852600")

# Script generated for node customer curated
customercurated_node1742663478129 = glueContext.write_dynamic_frame.from_catalog(frame=DropDuplicates_node1742698852600, database="yousef-project", table_name="customer_curated", transformation_ctx="customercurated_node1742663478129")

job.commit()
